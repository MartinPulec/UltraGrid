AR            = ar
RANLIB        = ranlib
CC            = @CC@
CXX	      = @CXX@
LINKER	      = @LINKER@
CFLAGS        = -fPIC @DEFS@ @CFLAGS@ @X_CFLAGS@
CPPFLAGS      = @CPPFLAGS@
CXXFLAGS      = @CXXFLAGS@
LDFLAGS      =  @LDFLAGS@
LIBS          = @DXT_LIB@ @QUICKTIME_LIB@ @PORTAUDIO_LIB@ @SAGE_LIB@ @X_PRE_LIBS@ \
                @X_LIBS@ @X_EXTRA_LIBS@ @JACK_LIB@ @MATHLIBS@ @LIBS@ @JPEG_LIB@ -lm -pthread
INC           = -I.. -Isrc -Itest @DVS_INC@ @DXT_INC@ @QUICKTIME_INC@ @DECKLINK_INC@ @PORTAUDIO_INC@ \
                @GL_INC@ @SAGE_INC@ @QUAD_INC@ @JACK_INC@ @JPEG_INC@
DECKLINK_PATH = @DECKLINK_PATH@
TARGET        = bin/uv
PERF          = bin/uv_perf
BUNDLE        = uv.app
DVS_UV_LIB    = @DVS_UV_LIB@
DXT_GLSL_CFLAGS = @DXT_GLSL_CFLAGS@
NVCC	      = @NVCC@

PREFIX = @prefix@
prefix = $(PREFIX)
exec_prefix = @exec_prefix@
INSTALL = @INSTALL@
bindir = @bindir@
libdir = @libdir@
datadir = @datadir@
datarootdir = @datarootdir@
uv_datadir = @datadir@/ultragrid/

OBJS          = src/bitstream.o \
		src/debug.o \
		src/perf.o \
		src/ntp.o \
		src/pdb.o \
		src/tile.o \
		src/tv.o \
		src/transmit.o \
		src/tfrc.o \
		src/rtp/pbuf.o \
		src/rtp/decoders.o \
		src/rtp/ptime.o \
		src/rtp/net_udp.o \
		src/rtp/rtp.o \
		src/rtp/rtp_callback.o \
		src/audio/audio.o \
		src/audio/utils.o \
		@PORTAUDIO_OBJ@ \
		@JACK_OBJ@ \
		src/compat/platform_semaphore.o \
		src/compat/platform_time.o \
		src/crypto/crypt_aes.o \
		src/crypto/crypt_aes_impl.o \
		src/crypto/crypt_des.o \
		src/crypto/md5.o \
		src/crypto/random.o \
		src/ihdtv/ihdtv.o \
		src/utils/ring_buffer.o \
		src/video.o \
		src/video_codec.o \
		src/video_capture.o \
		src/video_capture/dpx.o \
		src/video_capture/null.o \
		src/video_capture/testcard.o \
		src/video_capture/testcard2.o \
		src/video_compress.o \
		src/video_decompress.o \
		src/video_display.o \
		src/video_display/null.o \
		src/vo_postprocess.o \
		src/vo_postprocess/3d-interleaved.o \
		@DVS_OBJ@ \
		@QUICKTIME_OBJ@ \
		@DECKLINK_OBJ@ \
		@QUAD_OBJ@ \
		@X_OBJ@ \
		@SDL_OBJ@ \
		@GL_OBJ@ \
		@SAGE_OBJ@ \
		@COMPRESS_OBJ@ \
		@DXT_GLSL_OBJS@ \
		@JPEG_OBJ@
		
DVS_UV_LIB_OBJ  = \
		src/audio/utils.o \
		src/debug.o \
		src/utils/ring_buffer.o \
		src/video.o \
		src/video_codec.o \
		src/video_display/dvs_display_lib.o \
		src/video_capture/dvs_capture_lib.o
DVS_UV_LIB_LIB = @DVS_LIB@
		

# -------------------------------------------------------------------------------------------------
all: $(TARGET) $(DVS_UV_LIB) ag-plugins suggest-tests

src/version.h: VERSION
	@echo "Generating src/version.h"
	@sed -e 's/.*/#define ULTRAGRID_VERSION "UltraGrid v&"/' VERSION > src/version.h

$(TARGET): src/version.h $(OBJS) src/main.o 
	@if [ ! -d bin ]; then mkdir bin; fi
	$(LINKER) $(CFLAGS) $(LDFLAGS) $(OBJS) src/main.o $(LIBS) -o $(TARGET)

.c.o:
	$(CC) $(CFLAGS) $(INC) -c $< -o $@
	
# Set suffix for CUDA files
.SUFFIXES: .cu

# Pattern rule for compiling CUDA files
%.cu.o: %.cu
	$(NVCC) $(NVCCFLAGS) -c $< -o $@


src/video_capture/DeckLinkAPIDispatch.o: $(DECKLINK_PATH)/DeckLinkAPIDispatch.cpp
	$(CXX) $(CXXFLAGS) -Wno-multichar -O3 -c $(INC) -o src/video_capture/DeckLinkAPIDispatch.o $(DECKLINK_PATH)/DeckLinkAPIDispatch.cpp

src/video_capture/decklink.o: src/video_capture/decklink.cpp
	$(CXX) $(CXXFLAGS) -Wno-multichar -O3 -c $(INC) -o src/video_capture/decklink.o src/video_capture/decklink.cpp

src/video_display/decklink.o: src/video_display/decklink.cpp
	$(CXX) $(CXXFLAGS) -Wno-multichar -O3 -c $(INC) -o src/video_display/decklink.o src/video_display/decklink.cpp

src/video_display/sage_wrapper.o: src/video_display/sage_wrapper.cxx
	$(CXX) $(CXXFLAGS) -Wno-deprecated -fPIC -O3 -c $(INC) -DQUANTA_USE_PTHREADS -DQUANTA_THREAD_SAFE -DGLSL_YUV -o src/video_display/sage_wrapper.o src/video_display/sage_wrapper.cxx

../jpeg_compress/jpeg_common.o: ../jpeg_compress/jpeg_common.cc
	$(CXX) $(CXXFLAGS) $(INC) $< -c -o $@

../jpeg_compress/jpeg_encoder.o: ../jpeg_compress/jpeg_encoder.cc
	$(CXX) $(CXXFLAGS) $(INC) $< -c -o $@

../jpeg_compress/jpeg_decoder.o: ../jpeg_compress/jpeg_decoder.cc
	$(CXX) $(CXXFLAGS) $(INC) $< -c -o $@

../jpeg_compress/jpeg_writer.o: ../jpeg_compress/jpeg_writer.cc
	$(CXX) $(CXXFLAGS) $(INC) $< -c -o $@

../jpeg_compress/jpeg_reader.o: ../jpeg_compress/jpeg_reader.cc
	$(CXX) $(CXXFLAGS) $(INC) $< -c -o $@

../jpeg_compress/jpeg_table.o: ../jpeg_compress/jpeg_table.cc
	$(CXX) $(CXXFLAGS) $(INC) $< -c -o $@
	
../jpeg_compress/jpeg_huffman_cpu_encoder.o: ../jpeg_compress/jpeg_huffman_cpu_encoder.cc
	$(CXX) $(CXXFLAGS) $(INC) $< -c -o $@

../jpeg_compress/jpeg_huffman_cpu_decoder.o: ../jpeg_compress/jpeg_huffman_cpu_decoder.cc
	$(CXX) $(CXXFLAGS) $(INC) $< -c -o $@

../dxt_compress/dxt_encoder.o: ../dxt_compress/dxt_encoder.c ../dxt_compress/dxt_glsl.h
	$(CC) $(CFLAGS) $(INC) $(DXT_GLSL_CFLAGS) $< -c -o $@

../dxt_compress/dxt_decoder.o: ../dxt_compress/dxt_decoder.c ../dxt_compress/dxt_glsl.h
	$(CC) $(CFLAGS) $(INC) $(DXT_GLSL_CFLAGS) $< -c -o $@
	
../dxt_compress/dxt_common.o: ../dxt_compress/dxt_common.c ../dxt_compress/dxt_glsl.h
	$(CC) $(CFLAGS) $(INC) $(DXT_GLSL_CFLAGS) $< -c -o $@

../dxt_compress/dxt_glsl.h:../dxt_compress/compress_vp.glsl \
		../dxt_compress/compress_dxt1_fp.glsl ../dxt_compress/compress_dxt5ycocg_fp.glsl \
		../dxt_compress/display_fp.glsl ../dxt_compress/display_dxt5ycocg_fp.glsl \
		../dxt_compress/yuv422_to_yuv444.glsl ../dxt_compress/display_dxt1_yuv_fp.glsl \
		../dxt_compress/rgba_to_yuv422.glsl ../dxt_compress/rgba_to_yuv422_vp.glsl
	echo "/**" > $@
	echo " * GLSL source codes for DXT compressions" >> $@
	echo " *" >> $@
	echo " * @author Martin Srom" >> $@
	echo " */" >> $@
	# Write vp_compress
	echo "static const char vp_compress[] = " >> $@
	cat ../dxt_compress/compress_vp.glsl | sed 's/\(.*\)/    \"\1\\n\"/' >> $@
	echo ";" >> $@
	# Write fp_compress_dxt1
	echo "static const char fp_compress_dxt1[] = " >> $@    
	cat  ../dxt_compress/compress_dxt1_fp.glsl | sed 's/\(.*\)/    \"\1\\n\"/' >> $@
	echo ";" >> $@
	# Write fp_compress_dxt5ycocg
	echo "static const char fp_compress_dxt5ycocg[] = " >> $@
	cat ../dxt_compress/compress_dxt5ycocg_fp.glsl | sed 's/\(.*\)/    \"\1\\n\"/' >> $@
	echo ";" >> $@
	# Write fp_display_dxt1
	echo "static const char fp_display[] = " >> $@
	cat ../dxt_compress/display_fp.glsl | sed 's/\(.*\)/    \"\1\\n\"/' >> $@
	echo ";" >> $@
	# Write fp_display_dxt5ycocg
	echo "static const char fp_display_dxt5ycocg[] = " >> $@
	cat ../dxt_compress/display_dxt5ycocg_fp.glsl | sed 's/\(.*\)/    \"\1\\n\"/' >> $@
	echo ";" >> $@
	# yuv 422 to yuv 444 shader
	echo "static const char fp_yuv422_to_yuv_444[] = " >> $@
	cat ../dxt_compress/yuv422_to_yuv444.glsl | sed 's/\(.*\)/    \"\1\\n\"/' >> $@
	echo ";" >> $@
	# display YUV dxt1
	echo "static const char fp_display_dxt1_yuv[] = " >> $@
	cat ../dxt_compress/display_dxt1_yuv_fp.glsl | sed 's/\(.*\)/    \"\1\\n\"/' >> $@
	echo ";" >> $@
	# rgba to yuv 422 shader
	echo "static const char fp_display_rgba_to_yuv422[] = " >> $@
	cat ../dxt_compress/rgba_to_yuv422.glsl | sed 's/\(.*\)/    \"\1\\n\"/' >> $@
	echo ";" >> $@
	# rgba to yuv 422 vertex
	echo "static const char vp_display_rgba_to_yuv422[] = " >> $@
	cat ../dxt_compress/rgba_to_yuv422_vp.glsl | sed 's/\(.*\)/    \"\1\\n\"/' >> $@
	echo ";" >> $@
	


# -------------------------------------------------------------------------------------------------
TEST_OBJS = test/test_bitstream.o \
	    test/test_aes.o \
	    test/test_des.o \
	    test/test_md5.o \
	    test/test_random.o \
	    test/test_video_display.o \
	    test/test_video_capture.o \
	    test/test_tv.o \
	    test/test_net_udp.o \
	    test/test_rtp.o \
	    test/run_tests.o

test/run_tests: $(TEST_OBJS) $(OBJS) 
	$(LINKER) $(CFLAGS) $(TEST_OBJS) $(OBJS) $(LIBS) -o test/run_tests

suggest-tests:
	@echo ""
	@echo "*** Now type \"make tests\" to run the test suite"
	@echo ""

tests: test/run_tests 
	@test/run_tests

# -------------------------------------------------------------------------------------------------
ag-plugins: ag_plugin/uvReceiverService.zip ag_plugin/uvSenderService.zip

AG_PLUGIN_TX_SCRIPTS = ag_plugin/uvSenderService.py \
                       ag_plugin/uvSenderService.svc \
                       ag_plugin/uvSenderService.manifest

ag_plugin/uvSenderService.zip: $(AG_PLUGIN_TX_SCRIPTS) $(TARGET)
	@echo "Creating AccessGrid plugin: uvSenderService.zip"
	@rm  -f ag_plugin/uvSenderService.zip 
	@zip -j ag_plugin/uvSenderService.zip $(AG_PLUGIN_TX_SCRIPTS) $(TARGET)

AG_PLUGIN_RX_SCRIPTS = ag_plugin/uvReceiverService.py \
                       ag_plugin/uvReceiverService.svc \
                       ag_plugin/uvReceiverService.manifest

ag_plugin/uvReceiverService.zip: $(AG_PLUGIN_RX_SCRIPTS) $(TARGET)
	@echo "Creating AccessGrid plugin: uvReceiverService.zip"
	@rm  -f ag_plugin/uvReceiverService.zip 
	@zip -j ag_plugin/uvReceiverService.zip $(AG_PLUGIN_RX_SCRIPTS) $(TARGET)

# -------------------------------------------------------------------------------------------------
clean:
	-rm -f $(OBJS) src/main.o $(TARGET) src/version.h 
	-rm -f $(TEST_OBJS) test/run_tests
	-rm -f ag_plugin/uvReceiverService.zip ag_plugin/uvSenderService.zip
	-rm -rf $(BUNDLE)/Contents/MacOS/$(TARGET)
	-rm -rf $(PERF) src/uv_perf.o
	-rm -rf $(DVS_UV_LIB_OBJ) $(DVS_UV_LIB)

distclean: clean
	-rm -f Makefile config.status config.cache config.log src/config.h tags

etags:
	etags src/*.[ch] src/*/*.[ch]

ctags:
	ctags src/*.[ch] src/*/*.[ch]

release:
	cvs tag release-`cat VERSION | sed "s/\./-/g"`

bundle: all
	mkdir -p $(BUNDLE)/Contents/MacOS
	cp $(TARGET) $(BUNDLE)/Contents/MacOS/
	echo -n "UltraGrid" > $(BUNDLE)/Contents/PkgInfo

perf: src/tv.o src/crypto/random.o
	$(CC) $(CFLAGS) -DPERF src/uv_perf.c src/crypto/random.o src/tv.o -o $(PERF)

$(DVS_UV_LIB): $(DVS_UV_LIB_OBJ)
	mkdir -p lib/
	$(LINKER) $(CFLAGS) -shared -Wl,-soname,$(DVS_UV_LIB) $(DVS_UV_LIB_OBJ) $(DVS_UV_LIB_LIB) -o $(DVS_UV_LIB)

install: all
	$(INSTALL) -d -m 755 $(DESTDIR)/$(bindir)
	$(INSTALL) -m 755 bin/uv $(DESTDIR)/$(bindir)
	if [ -f "$(DVS_UV_LIB)" ]; then\
		$(INSTALL) -d -m 755 $(DESTDIR)/$(libdir);\
		$(INSTALL) -m 644 "$(DVS_UV_LIB)" $(DESTDIR)/$(libdir);\
	fi
	$(INSTALL) -d -m 755 $(DESTDIR)/$(uv_datadir)
	$(INSTALL) -m 755 data/ultragrid-bugreport-collect.sh $(DESTDIR)/$(uv_datadir)

uninstall:
	$(RM) $(DESTDIR)/$(bindir)/uv
	if [ -f "$(DVS_UV_LIB)" ]; then $(RM) $(DESTDIR)/$(libdir)/`echo $(DVS_UV_LIB)|sed 's/.*\///'`; fi
	$(RM) $(DESTDIR)/$(uv_datadir)/ultragrid-bugreport-collect.sh
	
